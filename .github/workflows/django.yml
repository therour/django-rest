name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip install
      id: cache-pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        APP_ENV=testing coverage run manage.py test
    - name: Lint with flake8
      run: |
        flake8 --statistics --tee --output-file reports/flake8/flake8stats.txt
    - name: Generate HTML Coverage
      run: |
        coverage html -d reports/coverage
        coverage xml -o reports/coverage/coverage.xml
    - name: Generate badges
      run: |
        genbadge flake8 -i reports/flake8/flake8stats.txt -o reports/badges/flake8-badge.svg
        genbadge coverage -i reports/coverage/coverage.xml -o reports/badges/coverage-badge.svg
        genbadge tests -i reports/junit/xunittest.xml -o reports/badges/tests-badge.svg
    - name: Upload lint,tests, and coverage results
      uses: actions/upload-artifact@v3
      with:
        name: reports-results-${{ matrix.python-version }}
        path: reports/
      if: ${{ always() }}
